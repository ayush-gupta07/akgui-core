name: CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm cache clean --force
        npm install --legacy-peer-deps
      
    - name: Run linting
      run: npm run lint
      
    - name: Run type checking
      run: npm run typecheck
      
    - name: Run tests
      run: npm run test
      
    - name: Run build
      run: npm run build
      
    - name: Check bundle size
      run: npm run size
      
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage/lcov.info
        fail_ci_if_error: false

  # visual-tests:
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 18.x
  #       cache: 'npm'
  #       
  #   - name: Install dependencies
  #     run: npm ci
  #     
  #   - name: Install Playwright browsers
  #     run: npx playwright install --with-deps
  #     
  #   - name: Run visual tests
  #     run: npm run test:visual
  #     
  #   - name: Upload test results
  #     uses: actions/upload-artifact@v3
  #     if: failure()
  #     with:
  #       name: playwright-report
  #       path: playwright-report/
  #       retention-days: 30  # build-playground:
  #   runs-on: ubuntu-latest
  #   
  #   steps:
  #   - name: Checkout code
  #     uses: actions/checkout@v4
  #     
  #   - name: Setup Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: 18.x
  #       cache: 'npm'
  #       
  #   - name: Install dependencies
  #     run: |
  #       npm cache clean --force
  #       npm install --legacy-peer-deps
  #       
  #   - name: Build playground
  #     run: npx vite build --config playground/vite.config.ts --mode production
      
    # Optional: Deploy playground to GitHub Pages or Vercel
    # - name: Deploy to GitHub Pages
    #   uses: peaceiris/actions-gh-pages@v3
    #   if: github.ref == 'refs/heads/main'
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     publish_dir: ./playground/dist
